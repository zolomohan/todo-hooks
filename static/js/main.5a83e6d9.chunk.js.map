{"version":3,"sources":["hooks/useInputState.js","reducers/todo.reducer.js","hooks/useLocalStorageReducer.js","contexts/todos.context.js","Input.js","hooks/useToggle.js","Todo.js","TodoList.js","helpers/registerServiceWorker.js","index.js","App.js"],"names":["useInputState","initialState","_useState","useState","_useState2","Object","slicedToArray","state","setState","event","target","value","todo_reducer","action","type","concat","toConsumableArray","id","uuid","task","completed","filter","todo","map","objectSpread","useLocalStorageReducer","key","defaultValue","reducer","_useReducer","useReducer","JSON","parse","window","localStorage","getItem","_useReducer2","dispatch","useEffect","setItem","stringify","TodoContext","createContext","DispatchContext","TodoProvider","_ref","children","_useLocalStorageReduc","TodoReducer","_useLocalStorageReduc2","todos","react_default","a","createElement","Provider","Input","initialValue","editMode","toggleEditMode","_useInputState","_useInputState2","handleChange","resetValue","useContext","edit","onSubmit","preventDefault","style","marginLeft","width","display","justifyContent","alignItems","TextField","fullWidth","label","onChange","marginRight","autoFocus","Fragment","IconButton","onClick","Done_default","Close_default","memo","_useToggle","arguments","length","undefined","useToggle","_useToggle2","ListItem","textDecoration","height","Checkbox","checked","tabIndex","ListItemText","ListItemSecondaryAction","Edit_default","Delete_default","TodoList","Paper","List","i","src_Todo","assign","Divider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","padding","margin","backgroundColor","borderRadius","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","sm","md","lg","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5a83e6d9.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default (initialState) => {\r\n\tconst [state, setState] = useState(initialState);\r\n\tconst handleChange = (event) => setState(event.target.value);\r\n\tconst reset = () => setState('');\r\n\treturn [state, handleChange, reset];\r\n};\r\n","import uuid from 'uuid/v4';\r\nexport default (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD':\r\n\t\t\treturn [...state, { id: uuid(), task: action.task, completed: false }];\r\n\t\tcase 'DELETE':\r\n\t\t\treturn state.filter((todo) => todo.id !== action.id);\r\n\t\tcase 'TOGGLE':\r\n\t\t\treturn state.map((todo) => (todo.id === action.id ? { ...todo, completed: !todo.completed } : todo));\r\n\t\tcase 'EDIT':\r\n\t\t\treturn state.map((todo) => (todo.id === action.id ? { ...todo, task: action.task } : todo));\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { useReducer, useEffect } from 'react';\r\n\r\nexport default (key, defaultValue, reducer) => {\r\n\tconst [ state, dispatch ] = useReducer(reducer, JSON.parse(window.localStorage.getItem(key)) || defaultValue);\r\n\tuseEffect(() => window.localStorage.setItem(key, JSON.stringify(state)), [ state, key ]);\r\n\treturn [ state, dispatch ];\r\n};\r\n","import React, { createContext } from 'react';\r\nimport TodoReducer from '../reducers/todo.reducer';\r\nimport useLocalStorageReducer from '../hooks/useLocalStorageReducer';\r\n\r\nexport const TodoContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nexport default function TodoProvider({ children }) {\r\n\tconst [ todos, dispatch ] = useLocalStorageReducer('todos', [], TodoReducer);\r\n\treturn (\r\n\t\t<TodoContext.Provider value={todos}>\r\n\t\t\t<DispatchContext.Provider value={dispatch}>{children}</DispatchContext.Provider>\r\n\t\t</TodoContext.Provider>\r\n\t);\r\n}\r\n","import React, { useContext } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useInputState from './hooks/useInputState';\r\nimport { DispatchContext } from './contexts/todos.context';\r\nimport { IconButton } from '@material-ui/core';\r\nimport Done from '@material-ui/icons/Done';\r\nimport Close from '@material-ui/icons/Close';\r\n\r\nexport default function Input({ initialValue, editMode, id, toggleEditMode }) {\r\n\tconst [value, handleChange, resetValue] = useInputState(initialValue || '');\r\n\tconst dispatch = useContext(DispatchContext);\r\n\tfunction edit() {\r\n\t\tdispatch({ type: 'EDIT', task: value, id: id });\r\n\t\ttoggleEditMode();\r\n\t}\r\n\treturn (\r\n\t\t<form\r\n\t\t\tonSubmit={(event) => {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\teditMode ? edit() : dispatch({ type: 'ADD', task: value });\r\n\t\t\t\tresetValue();\r\n\t\t\t}}\r\n\t\t\tstyle={\r\n\t\t\t\teditMode && {\r\n\t\t\t\t\tmarginLeft: '0.8rem',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<TextField\r\n\t\t\t\tfullWidth\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tlabel={!editMode && 'New Task'}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tstyle={{ marginRight: '1rem' }}\r\n\t\t\t\tautoFocus={editMode}\r\n\t\t\t/>\r\n\t\t\t{editMode && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<IconButton onClick={edit}>\r\n\t\t\t\t\t\t<Done />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton onClick={toggleEditMode}>\r\n\t\t\t\t\t\t<Close />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</form>\r\n\t);\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport default (initialValue = false) => {\r\n\tconst [ state, setState ] = useState(initialValue);\r\n\tconst toggle = () => setState(!state);\r\n\treturn [ state, toggle ];\r\n};\r\n","import React, { useContext, memo } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Input from './Input';\r\nimport useToggle from './hooks/useToggle';\r\nimport { DispatchContext } from './contexts/todos.context';\r\n\r\nexport default memo(function Todo({ id, task, completed }) {\r\n\tconst [ editMode, toggleEditMode ] = useToggle();\r\n\tconst dispatch = useContext(DispatchContext);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ListItem style={{ textDecoration: completed && 'line-through', height: '64px' }}>\r\n\t\t\t\t{editMode ? (\r\n\t\t\t\t\t<Input editMode id={id} toggleEditMode={toggleEditMode} initialValue={task} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Checkbox checked={completed} tabIndex={-1} onClick={() => dispatch({ type: 'TOGGLE', id: id })} />\r\n\t\t\t\t\t\t<ListItemText>{task}</ListItemText>\r\n\t\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t<IconButton onClick={toggleEditMode}>\r\n\t\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<IconButton onClick={() => dispatch({ type: 'DELETE', id: id })}>\r\n\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</ListItem>\r\n\t\t</>\r\n\t);\r\n});\r\n","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport Todo from './Todo';\r\nimport { TodoContext } from './contexts/todos.context';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport default function TodoList() {\r\n\tconst todos = useContext(TodoContext);\r\n\tif (todos.length <= 0) return null;\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<List>\r\n\t\t\t\t{todos.map((todo, i) => (\r\n\t\t\t\t\t<React.Fragment key={i}>\r\n\t\t\t\t\t\t<Todo key={todo.id} {...todo} />\r\n\t\t\t\t\t\t{i < todos.length - 1 && <Divider />}\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport registerServiceWorker from './helpers/registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TodoList from './TodoList';\r\nimport Input from './Input';\r\nimport TodoProvider from './contexts/todos.context';\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tstyle={{\r\n\t\t\t\tpadding: 0,\r\n\t\t\t\tmargin: 0,\r\n\t\t\t\theight: '100vh',\r\n\t\t\t\tbackgroundColor: '#fafafa',\r\n\t\t\t\tborderRadius: 0\r\n\t\t\t}}\r\n\t\t\televation={0}\r\n\t\t>\r\n\t\t\t<AppBar color='primary' position='static' style={{ height: '64px' }}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography color='inherit'>Todos</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\r\n\t\t\t<Grid container justify='center' style={{ marginTop: '2rem' }}>\r\n\t\t\t\t<Grid item xs={11} sm={10} md={8} lg={6}>\r\n\t\t\t\t\t<TodoProvider>\r\n\t\t\t\t\t\t<Paper style={{ margin: '1rem 0', padding: '0.5rem 1rem 1rem' }}>\r\n\t\t\t\t\t\t\t<Input />\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t<TodoList />\r\n\t\t\t\t\t</TodoProvider>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n"],"sourceRoot":""}